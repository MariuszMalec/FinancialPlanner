@using FinancialPlanner.Logic.Dtos
@using FinancialPlanner.Logic.Enums
@using System.Globalization

@model FinancialPlanner.Logic.Dtos.UsersBudgetDto

@{
    ViewData["Title"] = "Index";
    var possibleIncomeCategories = Enum.GetValues<CategoryOfTransaction>().Where(x => (int)x > 1 && (int)x < 100);
    var possibleOutcomeCategories = Enum.GetValues<CategoryOfTransaction>().Where(x => (int)x > 100);
    var totalIncome = Model.CategorySums.Where(x => (int)x.Key < 100).Select(x => x.Value).Sum();
    var totalOutcome = Model.CategorySums.Where(x => (int)x.Key > 100).Select(x => x.Value).Sum();
    var dateCommunication = $"For {CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(Model.UserBudgets.First().CreatedAt.Month)} of {Model.UserBudgets.First().CreatedAt.Year}";
    var planedIncome = Model.UserBudgets.Where(x => (int)x.Category > 1 && (int)x.Category < 100).Select(x => x.PlanedBudget).Sum();
    var planedOutcome = Model.UserBudgets.Where(x => (int)x.Category > 100).Select(x => x.PlanedBudget).Sum();
    var currentMonth = ViewData["CurrentMonth"];
    var selectedMonth = ViewData["CurrentMonthAsDataTime"];
    var userId = Model.UserId;

    var income = Convert.ToDecimal(ViewData["Income"]);
    var outcome = Convert.ToDecimal(ViewData["Outcome"]);
    var balance = Convert.ToDecimal(ViewData["MontlyBalance"]);


}


<div class="d-flex flex-column container shadow-sm p-3 mb-5 bg-white rounded">
    <div class="col">
        <form asp-action="Index">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label class="control-label">Select Month</label>
                <input asp-for=@selectedMonth type="month" name="selectMounth" class="form-control" />
            </div>
            <div class="form-group">
                <input type="submit" value="Select" class="btn btn-primary" />
                <input asp-controller="User" asp-action="Index" type="submit" value="Back to users" class="btn btn-primary" />
            </div>
        </form>
    </div>

    <table style="margin-top:2rem;" width="60%">
        <col style="width:30%">
        <col style="width:30%">
        <col style="width:30%">
        <thead>
            <tr>
                <th>
                    <b>Real Income</b>
                </th>
                <th>
                    <b>Real Outcome</b>
                </th>
                <th>
                    Money left
                </th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>
                    @income.ToString("C")
                </td>
                <td>
                    @outcome.ToString("C")
                </td>
                <td>
                    @{
                        var dif = income - outcome;
                    }
                    @dif.ToString("C")
                </td>
            </tr>
        </tbody>
    </table>

    <table style="margin-bottom:1rem;" width="60%">
        <col style="width:30%">
        <col style="width:30%">
        <col style="width:30%">
        <thead>
            <tr>
                <th>
                    <b>Planed Income</b>
                </th>
                <th>
                    <b>Planed Outcome</b>
                </th>
                <th>
                    Budget left
                </th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>
                    @planedIncome.ToString("C")
                </td>
                <td>
                    @planedOutcome.ToString("C")
                </td>
                <td>
                    @{
                        var pDif = planedIncome - planedOutcome;
                    }
                    @pDif.ToString("C")
                </td>
            </tr>
        </tbody>
    </table>
</div>

<form class=" justify-content-center shadow p-3 mb-5 bg-white rounded" asp-controller="CategoryBudget" asp-action="UpdateBudget" asp-route-id="@Model.UserId" method="post">
    <table class="table table-sm table-hover ">
        <thead class="thead-dark" style="padding-bottom: 20px;">
            <tr>
                <th>
                    <b>Category</b>
                </th>
                <th>
                    <b>Target</b>
                </th>
                <th>
                    <b>Spent</b>
                </th>
                <th>
                    <b>Difference</b>
                </th>
                <th>
                    spent/left [%]
                </th>
                <th>
                    Actions
                </th>

        </thead>

        <tbody>
            @foreach (var item in possibleIncomeCategories)
            {
                var modelItem = Model.UserBudgets.FirstOrDefault(x => x.Category == item);
                if (modelItem == null)
                    modelItem = new CategoryBudgetDto();
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item)
                    </td>
                    <td>
                        <div class="form-group">
                            <input type="number" name="@item.ToString()" class="form-control" value="@modelItem?.PlanedBudget" />
                        </div>
                    </td>
                    <td>
                        @{
                            Model.CategorySums.TryGetValue(item, out decimal spent);
                        }
                        @spent.ToString("C")
                    </td>
                    <td>
                        @{
                            var difference = Math.Abs(modelItem.PlanedBudget - spent);
                        }
                        @difference.ToString("C")
                    </td>
                    <td>
                        X
                    </td>
                </tr>
            }
        </tbody>

        <tbody>
            @foreach (var item in possibleOutcomeCategories)
            {
                var modelItem = Model.UserBudgets.FirstOrDefault(x => x.Category == item) ?? new CategoryBudgetDto();
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item)
                    </td>
                    <td>
                        <div class="form-group">
                            <input type="number" name="@item.ToString()" class="form-control" value="@modelItem?.PlanedBudget" />
                        </div>
                    </td>
                    <td>
                        @{
                            Model.CategorySums.TryGetValue(item, out decimal spent);
                        }
                        @spent.ToString("C")
                    </td>
                    <td>
                        @{
                            decimal difference;
                            if (modelItem == null)
                                difference = 0;
                            else
                                difference = modelItem.PlanedBudget - spent;
                        }
                        @difference.ToString("C")
                    </td>

                        @{
                            decimal pSpent = 0;
                            decimal pLeft = 0;
                            var budget = modelItem.PlanedBudget;
                            string output;

                            if (budget != 0)
                            {
                                pSpent = (spent / budget) * 100;
                                pSpent = Math.Round(pSpent);
                                pLeft = 100 - pSpent;
                            }

                            if (pLeft < 0)
                            {
                                output = $"You spent {pSpent - 100}% more!";
                                <td style="color:red">
                                    @output
                                </td>
                            }
                            else if (budget == 0 && spent > 0)
                            {
                                output = $"You spent {spent:c} without budget set";
                                <td>
                                    @output
                                </td>
                            }
                            else
                            {
                                output = $"{pSpent}% / {pLeft}%";
                                <td>
                                    @output
                                </td>
                            }
                        }
                    <td>
                        @*  <div class="dropdown">
                            <a class="btn btn-secondary dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                More
                            </a>

                            <div class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                                <a class="dropdown-item" asp-action="UsersTrending" asp-route-id="@Model.UserId" asp-route-category="@item">Trending</a>
                            </div>
                        </div>*@

                        <div class="form-group">
                            <input asp-action="UsersTrending" asp-route-id="@Model.UserId" asp-route-category="@item" type="submit" value="Trending" class="btn btn-primary" />
                        </div>

                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div>
        <input type="submit" value="Save" class="btn btn-primary" />
        <input asp-controller="User" asp-action="Index" type="submit" value="Back to users" class="btn btn-primary" />
    </div>

</form>