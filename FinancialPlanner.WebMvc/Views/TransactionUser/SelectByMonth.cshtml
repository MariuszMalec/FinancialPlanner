@using FinancialPlanner.Logic.Context;
@using FinancialPlanner.Logic.Interfaces
@model IEnumerable<FinancialPlanner.Logic.Dtos.TransactionUserDto>
@inject ApplicationDbContext _context
@inject IUserService _userService

@{
    ViewData["Title"] = "Index";
    var balance = Convert.ToDecimal(ViewData["MontlyBalance"]);
    var currentMonth = ViewData["CurrentMonth"];
    var selectedMonth = ViewData["CurrentMonthAsDataTime"];
    var userId = ViewData["UserId"];
    var user = _userService.GetById(userId.ToString()).Result;
}

@if (balance < 2400 && balance >= 1000)
{
    <h3 style="color:green">MontlyBalance:  @balance for @currentMonth</h3>
}
else if (balance < 1000 && balance >= 300)
{
    <h3 style="color:orange">MontlyBalance: @balance for @currentMonth</h3>
}
else if (balance < 300)
{
    <h3 style="color:red">MontlyBalance: @balance for @currentMonth</h3>
}
else
{
    <h3>MontlyBalance :  @balance for @currentMonth </h3>
}

@{
    if (user != null)
    {
        <h2>Transactions user : @user.FirstName
            @user.LastName
        </h2>
    }
    else
    {
        <h2>
            Transactions users
        </h2>
    }
}

<div class="row">
    <div class="col">
        <form asp-action="Select">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label class="control-label">Select Month</label>
                <input asp-for=@selectedMonth type="month" name="selectMounth" class="form-control" />
            </div>
            <div class="form-group">
                <input asp-controller="TransactionUser" asp-action="SelectByMonth" type="submit" value="Select" class="btn btn-primary" />
                <input asp-controller="User" asp-action="Index" type="submit" value="Back to users" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>
@*<p>
    <a asp-action="Create">Create New</a>
</p>*@
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.UserId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Currency)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Amount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Balance)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BalanceAfterTransaction)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedAt)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            @if (item.Type == FinancialPlanner.Logic.Enums.TypeOfTransaction.Income)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.UserId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Currency)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Type)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Category)
                    </td>
                    <td style="color:green">
                        @Html.DisplayFor(modelItem => item.Amount)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Balance)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.BalanceAfterTransaction)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreatedAt)
                    </td>
                    <td>
                        <a data-toggle="tooltip" data-placement="top" title="Create" asp-action="Create" asp-route-id="@item.UserId"><img class="rounded" alt="Image placeholder" src="~/icons/addTransactionX32.png"></a>
                        <a data-toggle="tooltip" data-placement="top" title="Edit" asp-action="Edit" asp-route-id="@item.Id"><img class="rounded" alt="Image placeholder" src="~/icons/editX32.png"></a>
                        <a data-toggle="tooltip" data-placement="top" title="Details" asp-action="Details" asp-route-id="@item.Id"><img class="rounded" alt="Image placeholder" src="~/icons/detailsX32.png"></a>
                        <a data-toggle="tooltip" data-placement="top" title="Delete" asp-action="Delete" asp-route-id="@item.Id"><img class="rounded" alt="Image placeholder" src="~/icons/deleteX32.png"></a>
                    </td>
                </tr>
            }
            else
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.UserId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Currency)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Type)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Category)
                    </td>
                    <td style="color:red">
                        @Html.DisplayFor(modelItem => item.Amount)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Balance)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.BalanceAfterTransaction)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreatedAt)
                    </td>
                    <td>
                        <a data-toggle="tooltip" data-placement="top" title="Create" asp-action="Create" asp-route-id="@item.UserId"><img class="rounded" alt="Image placeholder" src="~/icons/addTransactionX32.png"></a>
                        <a data-toggle="tooltip" data-placement="top" title="Edit" asp-action="Edit" asp-route-id="@item.Id"><img class="rounded" alt="Image placeholder" src="~/icons/editX32.png"></a>
                        <a data-toggle="tooltip" data-placement="top" title="Details" asp-action="Details" asp-route-id="@item.Id"><img class="rounded" alt="Image placeholder" src="~/icons/detailsX32.png"></a>
                        <a data-toggle="tooltip" data-placement="top" title="Delete" asp-action="Delete" asp-route-id="@item.Id"><img class="rounded" alt="Image placeholder" src="~/icons/deleteX32.png"></a>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

<div class="form-group">
    <a class="btn btn-primary" asp-controller="User" asp-action="Index">Back to users</a>
</div>

<style>
    td {
        color: darkblue;
        font-style: italic;
        font-size: 12px;
        border-block-color: darkblue;
        border-left-color: darkblue;
        border-right-color: darkblue;
        border-width: 0.25ex 0.25ex 0.15ex;
    }


    thead {
        background-color: silver;
        border-block-color: darkblue;
        border-left-color: darkblue;
        border-right-color: darkblue;
        border-width: 0.75ex 0.5ex 0.25ex;
    }

    th {
        border-width: 0.25ex 0.25ex 0.15ex;
    }
</style>
