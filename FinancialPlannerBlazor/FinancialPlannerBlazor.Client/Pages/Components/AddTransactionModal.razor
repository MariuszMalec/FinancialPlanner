@namespace FinancialPlannerBlazor.Client.Pages.Components
@using FinancialPlanner.Logic.Context
@using FinancialPlanner.Logic.Interfaces
@using FinancialPlanner.Logic.Models
@using FinancialPlanner.Logic.Repository
@using FinancialPlannerBlazor.Client.Models

@rendermode InteractiveServer

@inject ITransactionService userService
@inject IRepository<Transaction> repoService
@inject ApplicationDbContext _context

<Button Color="ButtonColor.Primary" @ref="addButton" @onclick="OnShowModalClick">
	<Icon Name="IconName.Plus"/> Add new transaction
</Button>

<Modal @ref="modal" Title="Add transaction" ShowCloseButton="true">
	<BodyTemplate>

		<img src="https://images.unsplash.com/photo-1614995008867-32eef7bff38c?q=80&w=1974&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D" alt=""
			 style="object-fit:scale-down;
                            width:50%;
                            height:auto;
                            border: solid 1px #CCC">


		<div class="row">
			<label>Last name:</label>
			<InputText @bind-Value="LastName" />
		</div>
		<div class="row">
			<label>Email:</label>
			<InputText @bind-Value="Email" />
		</div>


	</BodyTemplate>
	<FooterTemplate>
		<Button Color="ButtonColor.Primary" @onclick="InsertNewTransaction">Insert</Button>
		<Button Color="ButtonColor.Secondary" @onclick="OnHideModalClick">Close</Button>
	</FooterTemplate>
</Modal>

@code {
	[Parameter]
	public EventCallback<Transaction> InsertTransaction { get; set; }
	private Button addButton;
	private Modal modal = new();

	private string LastName { get; set; } = string.Empty;
	private string Email { get; set; } = string.Empty;

	private async Task InsertNewTransaction()
	{
		addButton.ShowLoading("Inserting transaction...");

		// var role = _context.Roles.Where(r => r.Name == "User").FirstOrDefault();

		// await OnHideModalClick();
		// await InsertUser.InvokeAsync(new User() {
		// 		Id = Guid.NewGuid().ToString(),
		// 		FirstName = "Test",
		// 		LastName = LastName,
		// 		Age = 47,
		// 		Balance = 0,
		// 		Address = "Sadowa",
		// 		Company = "GE",
		// 		Email = Email,
		// 		IsActive = true,
		// 		PasswordHash = "test",
		// 		Phone = string.Empty,
		// 		Transactions = new List<Transaction>() { },
		// 		TransactionId = Guid.NewGuid().ToString(),
		// 		Role = role
		// });
		addButton.HideLoading();
	}

	private async Task OnShowModalClick() => await modal.ShowAsync();

	private async Task OnHideModalClick() => await modal.HideAsync();

}
