@namespace FinancialPlannerBlazor.Client.Pages.Components
@using BlazorBootstrap
@using FinancialPlanner.Logic.Interfaces
@using FinancialPlanner.Logic.Models

@rendermode InteractiveServer

@inject IUserService userService

<Button Color="ButtonColor.Primary" @ref="addButton" @onclick="OnShowModalClick">
	<Icon Name="IconName.Plus"/> Add new user
</Button>

<Modal @ref="modal" Title="Add user" ShowCloseButton="true">
	<BodyTemplate>
		<label>Last name</label>
		<InputText @bind-Value="LastName" />
	</BodyTemplate>
	<FooterTemplate>
		<Button Color="ButtonColor.Primary" @onclick="InsertNewUser">Insert</Button>
	</FooterTemplate>
</Modal>

@code {
	[Parameter]
	public EventCallback<User> InsertUser { get; set; }
	private Button addButton;
	private Modal modal = new();


	private string LastName { get; set; } = string.Empty;

	private async Task InsertNewUser()
	{
		addButton.ShowLoading("Inserting user...");
		await OnHideModalClick();
		await InsertUser.InvokeAsync(

					new User()
						{
							Id = Guid.NewGuid().ToString(),
							FirstName = "Sebastian",
							LastName = LastName,
							Age = 40,
							Balance = 0,
							Address = "Dabka",
							Company = "GE",
							Currency = FinancialPlanner.Logic.Enums.Currency.PLN,
							Gender = FinancialPlanner.Logic.Enums.Gender.Male,
							Email = "seba@example.com",
							IsActive = true,
							Phone = "",
							Registered = DateTime.Now,
							Role = userService.GetAllQueryable().Result.Where(u => u.Role.Name == "User").Select(u=>u.Role).FirstOrDefault(),
							TransactionId = null
						}
		
		);
		addButton.HideLoading();
	}

	private async Task OnShowModalClick() => await modal.ShowAsync();

	private async Task OnHideModalClick() => await modal.HideAsync();

}
