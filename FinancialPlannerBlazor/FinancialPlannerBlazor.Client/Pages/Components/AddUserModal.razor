@namespace FinancialPlannerBlazor.Client.Pages.Components
@using FinancialPlanner.Logic.Context
@using FinancialPlanner.Logic.Interfaces
@using FinancialPlanner.Logic.Models
@using FinancialPlanner.Logic.Repository
@using FinancialPlannerBlazor.Client.Models

@rendermode InteractiveServer

@inject IUserService userService
@inject IRepository<User> repoService
@inject ApplicationDbContext _context

<Button Color="ButtonColor.Primary" @ref="addButton" @onclick="OnShowModalClick">
	<Icon Name="IconName.Plus"/> Add new user
</Button>

<Modal @ref="modal" Title="Add user" ShowCloseButton="true">
	<BodyTemplate>

		<div class="row">
			<label>Last name:</label>
			<InputText @bind-Value="LastName" />
		</div>
		<div class="row">
			<label>Email:</label>
			<InputText @bind-Value="Email" />
		</div>


	</BodyTemplate>
	<FooterTemplate>
		<Button Color="ButtonColor.Primary" @onclick="InsertNewUser">Insert</Button>
		<Button Color="ButtonColor.Secondary" @onclick="OnHideModalClick">Close</Button>
	</FooterTemplate>
</Modal>

@code {
	[Parameter]
	public EventCallback<User> InsertUser { get; set; }
	private Button addButton;
	private Modal modal = new();

	private string LastName { get; set; } = string.Empty;
	private string Email { get; set; } = string.Empty;

	private async Task InsertNewUser()
	{
		addButton.ShowLoading("Inserting user...");

		var role = _context.Roles.Where(r => r.Name == "User").FirstOrDefault();

		await OnHideModalClick();
		await InsertUser.InvokeAsync(new User() {
				Id = Guid.NewGuid().ToString(),
				FirstName = "Test",
				LastName = LastName,
				Age = 47,
				Balance = 0,
				Address = "Sadowa",
				Company = "GE",
				Email = Email,
				IsActive = true,
				PasswordHash = "test",
				Phone = string.Empty,
				Transactions = new List<Transaction>() { },
				TransactionId = Guid.NewGuid().ToString(),
				Role = role
		});
		addButton.HideLoading();
	}

	private async Task OnShowModalClick() => await modal.ShowAsync();

	private async Task OnHideModalClick() => await modal.HideAsync();

}
